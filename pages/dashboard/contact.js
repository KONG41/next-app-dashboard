import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import { useState, useEffect } from 'react'
import Layout from './layout'

export default function Contact() {
  const [contactData, setContactData] = useState([])
  const [inputContact, setInputContact] = useState({
    id: "",
    name: "",
    email: "",
    phone: ""
  })
  const [isUpdate, setIsUpdate] = useState(false)
  const fetchData = async () => {
    const res = await fetch('http://localhost:3000/api/contact/read')
    const json = await res.json()
    console.log(json)
    setContactData(json)
  }

  const handleCreateContact = async (e) => {
    e.preventDefault()
    const res = await fetch('http://localhost:3000/api/contact/insert', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        name: inputContact.name,
        email: inputContact.email,
        phone: parseInt(inputContact.phone)
      })
    })
    const json = await res.json()
    setInputContact({})
    fetchData()
  }

  const handleDelete = async (id) => {
    console.log(id)
    const res = await fetch('http://localhost:3000/api/contact/delete', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: id
      })
    })
    const json = await res.json()
    fetchData()
  }
  const handleUpdate = (id, name, email, phone) => {
    console.log(id, name, email, phone)
    setInputContact({
      ...inputContact,
      id: id,
      name: name,
      email: email,
      phone: phone,
    })
    setIsUpdate(true)
  }
  const handleSave = async (id) => {
    const res = await fetch('http://localhost:3000/api/contact/update', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        id: id,
        name: inputContact.name,
        email: inputContact.email,
        phone: parseInt(inputContact.phone)
      })
    })
    const json = await res.json()
    fetchData()
    setIsUpdate(false)
  }
  useEffect(() => {
    fetchData()
    console.log('Contact Dashboard')
  }, [])
  return (
    <Layout title="contact">
      <div className={styles.container}>
        <Head>
          <title>Contact Data</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h1>Add New Contact</h1>
          <form onSubmit={handleCreateContact}>

            <label>Name:</label>
            <br />
            <input type="text" defaultValue={inputContact.name} onChange={(e) => setInputContact({ ...inputContact, name: e.target.value })} />
            <br />
            <label>Email:</label>
            <br />
            <input type="text" defaultValue={inputContact.email} onChange={(e) => setInputContact({ ...inputContact, email: e.target.value })} />
            <br />
            <label>Phone:</label>
            <br />
            <input type="number" defaultValue={inputContact.phone} onChange={(e) => setInputContact({ ...inputContact, phone: e.target.value })} />
            <br />
            <br />
            <button type="submit" style={{ display: `${isUpdate ? 'none' : 'block'}` }}> Submit </button>
            <br />
          </form>
          <button onClick={() => handleSave(inputContact.id)} style={{ display: `${isUpdate ? 'block' : 'none'}` }}>Save id{inputContact.id}</button>
          <h1>Result Input</h1>
          <br />
          {
            contactData.map((item, index) => {
              return (
                <div key={item.id} style={{ width: '200px' }}>
                  <span>======= {item.id} =======</span>
                  <br />
                  <span>Name: {item.name} </span>
                  <br />
                  <span>Email: {item.email} </span>
                  <br />
                  <span>Phone: {item.phone} </span>
                  <br />
                  <button onClick={() => handleDelete(item.id)}>Delete</button>
                  <button onClick={() => handleUpdate(item.id, item.name, item.email, item.phone)}>Update</button>
                  <br />
                  <br />
                </div>
              )
            })
          }
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer>
      </div>
    </Layout>

  )
}
